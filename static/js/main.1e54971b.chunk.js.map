{"version":3,"sources":["logo.svg","components/list-item.jsx","components/todo-list.jsx","components/todo-form.jsx","components/todo-count.jsx","App.js","index.js"],"names":["ListItem","className","style","cursor","this","props","task","id","completed","onClick","value","due","React","Component","TodoList","todos","map","TodoForm","onSubmit","handleSubmit","htmlFor","type","placeholder","onChange","handleChange","autoComplete","dateFormat","placeholderText","minDate","Date","maxDate","getFullYear","getMonth","getDate","handleDateChange","TodoCount","count","App","state","error","bind","toggleCompleted","getPendingCount","length","todo","parseInt","setState","e","target","date","preventDefault","undefined","newTask","concat","height","src","logo","alt","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e54971b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nclass ListItem extends React.Component {\r\n\r\n    render() {\r\n        //renders list items with conditional formatting\r\n      return (\r\n        <>\r\n        <li className=\"w3-padding-16\" style={{cursor:\"pointer\"}}> \r\n            <span>[{this.props.task.id}]</span>\r\n            <span className={this.props.task.completed ? 'isCompleted' : ''} \r\n               onClick={() => {\r\n                this.props.onClick(this.props.task.id);\r\n              }}>\r\n                <span> {this.props.task.value} </span>\r\n                -\r\n                <span> {this.props.task.due}</span>\r\n            </span>\r\n            {!this.props.task.completed && /*<---- This code does the contional rendering of the button 'x' to toggle task complete, \r\n                if task is completed 'x' disappears */\r\n                <span className=\"w3-right w3-margin-right\" style={{cursor:\"pointer\"}} \r\n                onClick={() => {this.props.onClick(this.props.task.id);\r\n            }}>&times;</span>\r\n            }\r\n        </li>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n  export default ListItem;\r\n","import React from 'react'\r\nimport ListItem from  './list-item'\r\n\r\nclass TodoList extends React.Component {\r\n\r\n   \r\n    render() {\r\n        //renders todolist with listitems; todo-list is composed of list-item component;\r\n      return (\r\n        <div className=\"w3-container w3-light-grey w3-padding-16\">\r\n          <ul className=\"w3-ul\">\r\n                {this.props.todos.map((task) =>\r\n                    <ListItem key={task.id} task={task} onClick={this.props.onClick}/>\r\n                )}\r\n        </ul>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  export default TodoList;\r\n","import React from 'react'\r\n\r\nimport DatePicker from \"react-datepicker\";\r\n\r\n\r\nclass TodoForm extends React.Component {\r\n\r\n  \r\n    render() {\r\n        //renders form to add task to the list\r\n      return (\r\n        <div  className=\"w3-container w3-light-grey w3-padding-16 align-center\">\r\n          <form className=\"form-inline\" onSubmit={this.props.handleSubmit}>\r\n            <div className=\"form-row w3-row w3-margin-top\">\r\n            <div className=\"col w3-col\"> \r\n                <div className=\"form-group\">\r\n                <label htmlFor=\"new-todo\" className=\"sr-only\">\r\n                        Task\r\n                </label>\r\n                    <input\r\n                        id=\"new-todo\"\r\n                        type=\"text\"\r\n                        placeholder=\"Task name\"\r\n                        className=\"w3-input form-control\"\r\n                        onChange={this.props.handleChange}\r\n                        value={this.props.value}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n                </div>\r\n                <div className=\"col w3-col\">\r\n                <div className=\"form-group\">\r\n                <label htmlFor=\"new-todo-date\"\r\n                            className=\"sr-only\">\r\n                        Date\r\n                    </label>\r\n                    <DatePicker\r\n                        id=\"new-todo-date\"\r\n                        type=\"date\"\r\n                        dateFormat=\"yyyy/MM/dd\"\r\n                        className=\"form-control w3-input\"\r\n                        placeholderText=\"YYYY-MM-DD\"\r\n                        minDate={new Date()}\r\n                        maxDate={new Date(new Date().getFullYear()+5,new Date().getMonth()+1,new Date().getDate())}\r\n                        onChange={this.props.handleDateChange}\r\n                        value={this.props.due}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n                </div>\r\n                <div className=\"col w3-col\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"btnSubmit\"className=\"sr-only\">Add</label>\r\n                    <button type=\"submit\" id=\"btnSubmit\" className=\"btn btn-primary w3-btn w3-blue\">Add</button> \r\n                </div>\r\n                </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  export default TodoForm;\r\n","import React from 'react';\r\n\r\nclass TodoCount extends React.Component{\r\n\r\n\r\n    render(){\r\n        return(\r\n        <div className=\"w3-container w3-light-grey w3-padding-16\">\r\n\r\n          <h6 className=\"w3-right w3-margin-right\">\r\n            {this.props.count} task(s)\r\n          </h6>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default TodoCount; ","import logo from './logo.svg';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport React from 'react'\nimport TodoList from './components/todo-list'\nimport TodoForm from './components/todo-form'\n \nimport \"react-datepicker/dist/react-datepicker.css\";\nimport TodoCount from './components/todo-count';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = { todos: [],error: '', value:'', due:'' };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.toggleCompleted= this.toggleCompleted.bind(this);\n    this.getPendingCount = this.getPendingCount.bind(this);\n    \n  }\n  getPendingCount(){\n    //return count of total pending tasks\n    var count = 0;\n    if(this.state.todos.length === 0){\n      return 0;\n    }\n     this.state.todos.map(todo => {\n      if (todo.completed === false) {\n        count ++;\n      }\n      return count;\n    });\n    return parseInt(count);\n  }\n\n  toggleCompleted(id){\n    //this function toggles completed boolean and sets it to the todos state\n    // eslint-disable-next-line array-callback-return\n    const todos = this.state.todos.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n      if(todo)\n      return todo;\n    });\n    this.setState({ todos: todos });\n }\n  handleChange(e) {\n    //function to handle changes in input value - task name\n    this.setState({ value: e.target.value });\n  }\n  handleDateChange(date) {\n    //date object has lot of info so it needs to split and set to string as shown below \n    //getMonth starts from 0 for January, so getMonth()+1 gives correct month in number\n    this.setState({ due: date.getFullYear()+\"-\"+(date.getMonth()+1)+\"-\"+date.getDate()  });\n  }\n  handleSubmit(e) {\n    //on form submit this function is called to add new task to the todos state\n    e.preventDefault();\n    if (this.state.value.length === 0 ||this.state.due === '' ||this.state.due === undefined) {\n      //dont do anything for invalid input, return back to app\n      return;\n    }\n    //else part to handle valid input and add them to the list \n    const newTask = {\n      value: this.state.value,\n      due: this.state.due,\n      completed: false,\n      id: this.state.todos.length +1\n    };\n    this.setState(state => ({\n      todos: state.todos.concat(newTask),\n      error:'',\n      value: '',\n      due:''\n    }));\n  }\n\n  render(){ \n    //renders composition of components - todo-form,todo-count,todo-list\n    return (\n      <>\n      <div className=\"App w3-full w3-card w3-light-grey\"  style={{height:\"100%\"}}>\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n        <div className=\"w3-container\">\n          <TodoForm \n            value={this.state.value}\n            due={this.state.due} \n            handleSubmit={this.handleSubmit}\n            handleChange={this.handleChange} \n            handleDateChange={this.handleDateChange}>            \n          </TodoForm>\n          <TodoCount count={this.getPendingCount()}></TodoCount>\n          <TodoList todos={this.state.todos} onClick={this.toggleCompleted}></TodoList>\n        </div>\n      </div>\n      <div className=\"footer w3-full w3-card\">\n          <h6>Copyright(s) reserved; Created using <a className=\"App-link\" href=\"https://reactjs.org/\">reactjs</a> and <a className=\"App-link\"  href=\"https://create-react-app.dev/\">create-react-app</a>;</h6>\n      </div>\n    </>\n    )}\n}  \n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}