{"version":3,"sources":["logo.svg","components/list-item.jsx","components/todo-list.jsx","components/todo-form.jsx","components/todo-count.jsx","App.js","index.js"],"names":["ListItem","this","props","id","className","style","cursor","task","completed","onClick","value","due","key","React","Component","TodoList","todos","map","todo","TodoForm","onSubmit","handleSubmit","htmlFor","display","type","placeholder","onChange","handleChange","autoComplete","dateFormat","placeholderText","minDate","Date","maxDate","getFullYear","getMonth","getDate","handleDateChange","paddingTop","paddingBottom","TodoCount","count","App","state","error","bind","toggleCompleted","getPendingCount","length","parseInt","setState","e","target","date","preventDefault","undefined","concat","height","src","logo","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d882e17.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nclass ListItem extends React.Component {\r\n\r\n    render() {\r\n        //renders list items with conditional formatting\r\n      return (\r\n        <>{this.props.id>=0 && \r\n          <li key={this.props.key} className=\"w3-padding-16\" style={{cursor:\"pointer\"}}> \r\n          <span>[{this.props.task.id}]</span>\r\n          <span className={this.props.task.completed ? 'isCompleted' : ''} \r\n             onClick={() => {\r\n              this.props.onClick(this.props.task.id);\r\n            }}>\r\n              <span> {this.props.task.value} </span>\r\n              -\r\n              <span> {this.props.task.due}</span>\r\n          </span>\r\n          {!this.props.task.completed && /*<---- This code does the contional rendering of the button 'x' to toggle task complete, \r\n              if task is completed 'x' disappears */\r\n              <span className=\"w3-right w3-margin-right\" style={{cursor:\"pointer\"}} \r\n              onClick={() => {this.props.onClick(this.props.task.id);\r\n              }}>&times;</span>\r\n          }\r\n          </li>\r\n          }\r\n        </>\r\n      );\r\n    }\r\n  }\r\n  export default ListItem;\r\n","import React from 'react'\r\nimport ListItem from  './list-item'\r\n\r\n\r\nclass TodoList extends React.Component {\r\n// eslint-disable-next-line no-useless-constructor\r\nconstructor(props){\r\n  super(props);\r\n  \r\n}\r\n   \r\n    render() {\r\n        //renders todolist with listitems; todo-list is composed of list-item component;\r\n      return (\r\n        <div className=\"w3-padding-16\">\r\n          <ul className=\"w3-ul\">\r\n                {this.props.todos.map((todo) =>\r\n                    <ListItem key={todo.id} id={todo.id}task={todo} onClick={this.props.onClick}/>\r\n                )}\r\n             <li className=\"w3-padding-16\"></li>   \r\n        </ul>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  export default TodoList;\r\n","import React from 'react'\r\n\r\nimport DatePicker from \"react-datepicker\";\r\n\r\n\r\nclass TodoForm extends React.Component {\r\n\r\n  \r\n    render() {\r\n        //renders form to add task to the list\r\n      return (\r\n        <div  className=\"w3-padding-16 align-center\">\r\n          <form className=\"form-inline\" onSubmit={this.props.handleSubmit}>\r\n            <div className=\"form-row row w3-margin-top\">\r\n            <div className=\"col w3-col\"> \r\n                \r\n                <div className=\"form-group\">\r\n                <label htmlFor=\"new-todo\" className=\"control-label form-inline\" style={{display:\"block\"}}>\r\n                        Task\r\n                </label>\r\n                \r\n                    <input\r\n                        id=\"new-todo\"\r\n                        type=\"text\"\r\n                        placeholder=\"Task name\"\r\n                        className=\"form-control\"\r\n                        onChange={this.props.handleChange}\r\n                        value={this.props.value}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n                </div>\r\n            <div className=\"col w3-col\" style={{display:\"block\"}}>        \r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"new-todo-date\" className=\"control-lable\" style={{display:\"block\"}}>\r\n                        Date\r\n                    </label>\r\n                    <DatePicker\r\n                        id=\"new-todo-date\"\r\n                        type=\"date\"\r\n                        dateFormat=\"yyyy/MM/dd\"\r\n                        className=\"form-control\"\r\n                        placeholderText=\"YYYY-MM-DD\"\r\n                        minDate={new Date()}\r\n                        maxDate={new Date(new Date().getFullYear()+5,new Date().getMonth()+1,new Date().getDate())}\r\n                        onChange={this.props.handleDateChange}\r\n                        value={this.props.due}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n                </div>\r\n            <div className=\"col w3-col\" style={{display:\"block\",paddingTop:\"18.75px\"}}>\r\n                <div className=\"form-group form-inline\">\r\n                    \r\n                    <label htmlFor=\"btnSubmit\"className=\"sr-only control-label\">Add</label>\r\n                    <button type=\"submit\" id=\"btnSubmit\" style={{display:\"block\",paddingTop:\"11.75px\",paddingBottom:\"13.75px\" }} className=\"btn btn-sm btn-primary w3-btn  w3-blue\">Add</button> \r\n                </div>\r\n            </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  export default TodoForm;\r\n","import React from 'react';\r\n\r\nclass TodoCount extends React.Component{\r\n\r\n\r\n    render(){\r\n        return(\r\n        <div className=\"w3-padding-16\">\r\n          <h6 className=\"w3-right w3-margin-right\">\r\n            {this.props.count} task(s)\r\n          </h6>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default TodoCount; ","import logo from './logo.svg';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport React from 'react'\nimport TodoList from './components/todo-list'\nimport TodoForm from './components/todo-form'\n \nimport \"react-datepicker/dist/react-datepicker.css\";\nimport TodoCount from './components/todo-count';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = { todos: [],error: '', value:'', due:'' };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.toggleCompleted= this.toggleCompleted.bind(this);\n    this.getPendingCount = this.getPendingCount.bind(this);\n    \n  }\n  getPendingCount(){\n    //return count of total pending tasks\n    var count = 0;\n    if(this.state.todos.length === 0){\n      return 0;\n    }\n     this.state.todos.map(todo => {\n      if (todo.completed === false) {\n        count ++;\n      }\n      return count;\n    });\n    return parseInt(count);\n  }\n\n  toggleCompleted(id){\n    //this function toggles completed boolean and sets it to the todos state\n    // eslint-disable-next-line array-callback-return\n    const todos = this.state.todos.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n      if(todo)\n      return todo;\n    });\n    this.setState({ todos: todos });\n }\n  handleChange(e) {\n    //function to handle changes in input value - task name\n    this.setState({ value: e.target.value });\n  }\n  handleDateChange(date) {\n    //date object has lot of info so it needs to split and set to string as shown below \n    //getMonth starts from 0 for January, so getMonth()+1 gives correct month in number\n    this.setState({ due: date.getFullYear()+\"-\"+(date.getMonth()+1)+\"-\"+date.getDate()  });\n  }\n  handleSubmit(e) {\n    //on form submit this function is called to add new task to the todos state\n    e.preventDefault();\n    if (this.state.value.length === 0 ||this.state.due === '' ||this.state.due === undefined) {\n      //dont do anything for invalid input, return back to app\n      return;\n    }\n    //else part to handle valid input and add them to the list \n    const todo = {\n      value: this.state.value,\n      due: this.state.due,\n      completed: false,\n      id: this.state.todos.length +1\n    };\n    this.setState(state => ({\n      todos: state.todos.concat(todo),\n      error:'',\n      value: '',\n      due:''\n    }));\n  }\n\n  render(){ \n    //renders composition of components - todo-form,todo-count,todo-list\n    return (\n      <>\n      <div className=\"App w3-full w3-card w3-light-grey\"  style={{height:\"100%\"}}>\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n        <div className=\"w3-container\">\n          <TodoForm \n            value={this.state.value}\n            due={this.state.due} \n            handleSubmit={this.handleSubmit}\n            handleChange={this.handleChange} \n            handleDateChange={this.handleDateChange}>            \n          </TodoForm>\n          <TodoCount count={this.getPendingCount()}></TodoCount>\n          <TodoList todos={this.state.todos} onClick={this.toggleCompleted}></TodoList>\n        </div>\n      </div>\n    </>\n    )}\n}  \n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}